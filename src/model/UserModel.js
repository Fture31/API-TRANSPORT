const bcrypt = require("bcryptjs");
const db = require("../config/db"); // Connexion √† la base de donn√©es

class UserModel {
  // M√©thode pour cr√©er un utilisateur dans la base de donn√©es
  static async create({ email, password }) {
    try {
      
      
      const [result] = await db.query(
        "INSERT INTO users (email, password) VALUES (?, ?)",
        [email, password]
      );
      return { id: result.insertId, email, password };
    } catch (error) {
      console.error("‚ùå Erreur lors de la cr√©ation :", error);
      throw error;
    }
  }

  // M√©thode pour trouver un utilisateur par email
  static async findByEmail(email) {
    try {
      console.log("üîé Requ√™te SQL envoy√©e : SELECT * FROM users WHERE email = ?", email);
      const [rows] = await db.query(
        "SELECT * FROM users WHERE email = ?",
        [email]
      );
      console.log("üì¶ R√©sultats trouv√©s :", rows);
      return rows[0] || null;
    } catch (error) {
      console.error("‚ùå Erreur SQL :", error);
      throw error;
    }
  }
}

module.exports = UserModel;
